{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","dias","querySelectorAll","categoria","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","Object","values","includes","async","buscarEventos","id","horaSeleccionada","classList","remove","add","onclick","seleccionarHora","iniciarBusqueda","e","target","name","horaPrevia","url","solicitud","fetch","respuesta","json","evt","horasListado","li","horasTomadas","map","evento","hora_id","HorasLitadoArray","Array","from","filter","dataset","horaId","hora","obtenerHorasDisponibles","error","console","log","ponenteInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","ponentesArray","ponente","nombre","trim","apellido","formatearPonentes","mostrarPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","ponenteId","seleccionarPonente","appendChild","noResultado","busquedaPonentes","obtenerPonente","ponenteDom","buscarPonenteUnico","ponentePrevio","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function () {\r\n    const horas = document.querySelector(\"#horas\");\r\n\r\n\r\n    if (horas) {\r\n        const dias = document.querySelectorAll(\"[name='dia']\");\r\n        const categoria = document.querySelector(\"[name='categoria_id']\");\r\n        const inputHiddenDia = document.querySelector(\"[name='dia_id']\");\r\n        const inputHiddenHora = document.querySelector(\"[name='hora_id']\");\r\n\r\n        categoria.addEventListener(\"change\", terminoBusqueda);\r\n\r\n        dias.forEach(dia => dia.addEventListener(\"change\", terminoBusqueda));\r\n\r\n        let busqueda = {\r\n            categoria_id: +categoria.value || \"\",\r\n            dia: +inputHiddenDia.value || \"\"\r\n        }\r\n        if (!Object.values(busqueda).includes(\"\")) {\r\n\r\n            async function iniciarBusqueda() {\r\n                await buscarEventos();\r\n                //resaltar la hora del evento actual\r\n                const id = inputHiddenHora.value;\r\n                const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`);\r\n                horaSeleccionada.classList.remove(\"horas__hora--deshabilitada\");\r\n                horaSeleccionada.classList.add(\"horas__hora--seleccionada\");\r\n                horaSeleccionada.onclick= seleccionarHora;\r\n            }\r\n\r\n            iniciarBusqueda();\r\n        }\r\n\r\n\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n            //reinicia los campos\r\n            inputHiddenHora.value = \"\";\r\n            inputHiddenDia.value = \"\";\r\n            //eliminamos si hay una hora previa\r\n            const horaPrevia = document.querySelector(\".horas__hora--seleccionada\");\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove(\"horas__hora--seleccionada\")\r\n            }\r\n\r\n            if (Object.values(busqueda).includes(\"\")) {\r\n                return;\r\n            }\r\n\r\n            buscarEventos();\r\n        }\r\n\r\n        async function buscarEventos() {\r\n\r\n            const { dia, categoria_id } = busqueda;\r\n\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            try {\r\n                solicitud = await fetch(url);\r\n                respuesta = await solicitud.json();\r\n\r\n                obtenerHorasDisponibles(respuesta);\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n\r\n        }\r\n\r\n        function obtenerHorasDisponibles(evt) {\r\n\r\n            //reiniciar la lista\r\n            const horasListado = document.querySelectorAll(\"#horas li\");\r\n            horasListado.forEach(li => li.classList.add(\"horas__hora--deshabilitada\"));\r\n            //comprobar horas de eventos tomados\r\n            const horasTomadas = evt.map(evento => evento.hora_id);\r\n            const HorasLitadoArray = Array.from(horasListado);\r\n\r\n            const resultado = HorasLitadoArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\r\n           \r\n            resultado.forEach(li => li.classList.remove(\"horas__hora--deshabilitada\"));\r\n\r\n            const horasDisponibles = document.querySelectorAll(\"#horas li:not(.horas__hora--deshabilitada)\");\r\n            horasDisponibles.forEach(hora => hora.addEventListener(\"click\", seleccionarHora))\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n            const horaPrevia = document.querySelector(\".horas__hora--seleccionada\");\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove(\"horas__hora--seleccionada\")\r\n            }\r\n\r\n            //agregar estilo de clase al li seleccionada\r\n            e.target.classList.add(\"horas__hora--seleccionada\");\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n            //agregar datos al input de dia\r\n            inputHiddenDia.value = document.querySelector(\"[name='dia']:checked\").value;\r\n\r\n        }\r\n    }\r\n})();","(function () {\r\n    const ponenteInput = document.querySelector(\"#ponentes\");\r\n    if (ponenteInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonentes = document.querySelector(\"#listado-ponentes\");\r\n        const ponenteHidden = document.querySelector(\"[name='ponente_id']\");\r\n\r\n        mostrarPonentes();\r\n        ponenteInput.addEventListener(\"input\", buscarPonentes)\r\n        if (ponenteHidden.value) {\r\n            async function buscarPonenteUnico(){\r\n                const id = ponenteHidden.value;\r\n                console.log(id);\r\n                const ponente= await obtenerPonente(id);\r\n                const {nombre, apellido} = ponente;\r\n                //insertar en el html\r\n                const ponenteDom = document.createElement(\"LI\");\r\n                ponenteDom.classList.add(\"listado-ponentes__ponente\", \"listado-ponentes__ponente--seleccionado\");\r\n                ponenteDom.textContent= `${nombre} ${apellido}`;\r\n                listadoPonentes.appendChild(ponenteDom);\r\n            }\r\n\r\n            buscarPonenteUnico();\r\n            \r\n        }\r\n\r\n\r\n        async function mostrarPonentes() {\r\n\r\n            const url = `/api/ponentes`;\r\n\r\n            solicitud = await fetch(url);\r\n            respuesta = await solicitud.json();\r\n\r\n            formatearPonentes(respuesta);\r\n\r\n        }\r\n        async function obtenerPonente(id) {\r\n\r\n            const url = `/api/ponente?id=${id}`;\r\n\r\n            solicitud = await fetch(url);\r\n            respuesta = await solicitud.json();\r\n\r\n           return respuesta;\r\n\r\n        }\r\n\r\n        function formatearPonentes(ponentesArray = []) {\r\n            ponentes = ponentesArray.map(ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido}`,\r\n                    id: ponente.id\r\n                }\r\n            })\r\n\r\n        }\r\n\r\n        function buscarPonentes(e) {\r\n            const busqueda = e.target.value;\r\n\r\n            if (busqueda.length > 3) {\r\n                const expresion = new RegExp(busqueda, \"i\");\r\n\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    if (ponente.nombre.toLowerCase().search(expresion) !== -1) {\r\n                        return ponente;\r\n                    }\r\n                })\r\n\r\n            }else{\r\n                ponentesFiltrados=[];\r\n            }\r\n            busquedaPonentes();\r\n        }\r\n\r\n        function busquedaPonentes(){\r\n            while (listadoPonentes.firstChild) {\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n            }\r\n            if (ponentesFiltrados.length >0) {\r\n                \r\n                ponentesFiltrados.forEach(ponente=>{\r\n                    const ponenteHTML = document.createElement(\"LI\");\r\n                    ponenteHTML.classList.add(\"listado-ponentes__ponente\");\r\n                    ponenteHTML.textContent= ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId= ponente.id;\r\n                    ponenteHTML.onclick= seleccionarPonente;\r\n                    //añadir el li\r\n                    listadoPonentes.appendChild(ponenteHTML);\r\n                })\r\n            }else{\r\n                const noResultado = document.createElement(\"P\");\r\n                noResultado.classList.add(\"listado-ponentes__ponente\");\r\n                noResultado.textContent=\"No hay resultados para tu búsqueda\";\r\n                listadoPonentes.appendChild(noResultado);\r\n            }\r\n        }\r\n\r\n        function seleccionarPonente(e){\r\n            const ponente = e.target;\r\n            //remover clase previa\r\n            const ponentePrevio = document.querySelector(\".listado-ponentes__ponente--seleccionado\");\r\n            if (ponentePrevio) {\r\n                ponentePrevio.classList.remove(\"listado-ponentes__ponente--seleccionado\");\r\n            }\r\n            ponente.classList.add(\"listado-ponentes__ponente--seleccionado\");\r\n            ponenteHidden.value = ponente.dataset.ponenteId;\r\n        }\r\n    }\r\n})();","(function () {\r\n    const tagsInput = document.querySelector(\"#tags_input\");\r\n    if (tagsInput) {\r\n        const tagsDiv = document.querySelector(\"#tags\");\r\n        const tagsInputHidden = document.querySelector(\"[name='tags']\");\r\n        let tags = [];\r\n\r\n        //recuperar del input oculto los tags\r\n        if (tagsInputHidden.value !== \"\") {\r\n            tags= tagsInputHidden.value.split(\",\");\r\n            mostrarTags();\r\n        }\r\n\r\n\r\n        //escuchar los cambios en el input\r\n        tagsInput.addEventListener(\"keypress\", guardarTag);\r\n\r\n\r\n        function guardarTag(evt) {\r\n            if (evt.keyCode == 44) {\r\n\r\n                if (evt.target.value.trim() == \"\" || evt.target.value < 1) {\r\n                    return;\r\n                }\r\n                evt.preventDefault();\r\n                tags = [...tags, evt.target.value.trim()];\r\n                tagsInput.value = \"\";\r\n                mostrarTags();\r\n                console.log(tags);\r\n\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent=\"\";\r\n            tags.forEach(tag =>{\r\n                const etiqueta = document.createElement(\"LI\");\r\n                etiqueta.classList.add(\"formulario__tag\");\r\n                etiqueta.textContent= tag;\r\n                etiqueta.ondblclick=eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            });\r\n\r\n            actualizarInputHidden();\r\n            \r\n        }\r\n        function eliminarTag(e){\r\n           e.target.remove();\r\n           tags= tags.filter(tag => tag !== e.target.textContent);\r\n           actualizarInputHidden();\r\n\r\n        }\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value= tags.toString();\r\n            \r\n        }\r\n    }\r\n\r\n\r\n\r\n})()"]}